// qpdfsearchmodel.sip generated by MetaSIP
//
// This file is part of the QtPdf Python extension module.
//
// Copyright (c) 2023 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QPdfSearchModel : QAbstractListModel
{
%TypeHeaderCode
#include <qpdfsearchmodel.h>
%End

public:
    enum class Role /BaseType=IntEnum/
    {
        Page,
        IndexOnPage,
        Location,
        ContextBefore,
        ContextAfter,
    };

    explicit QPdfSearchModel(QObject *parent /TransferThis/);
    virtual ~QPdfSearchModel();
    QList<QPdfLink> resultsOnPage(int page) const;
    QPdfLink resultAtIndex(int index) const;
    QPdfDocument *document() const;
    QString searchString() const;
    virtual QHash<int, QByteArray> roleNames() const;
    virtual int rowCount(const QModelIndex &parent) const;
    virtual QVariant data(const QModelIndex &index, int role) const;

public slots:
    void setSearchString(const QString &searchString);
    void setDocument(QPdfDocument *document);

signals:
    void documentChanged();
    void searchStringChanged();

protected:
    virtual void timerEvent(QTimerEvent *event);
};
