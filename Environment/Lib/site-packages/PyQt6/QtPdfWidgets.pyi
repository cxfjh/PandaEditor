# The PEP 484 type hints stub file for the QtPdfWidgets module.
#
# Generated by SIP 6.7.7
#
# Copyright (c) 2023 Riverbank Computing Limited <info@riverbankcomputing.com>
# 
# This file is part of PyQt6.
# 
# This file may be used under the terms of the GNU General Public License
# version 3.0 as published by the Free Software Foundation and appearing in
# the file LICENSE included in the packaging of this file.  Please review the
# following information to ensure the GNU General Public License version 3.0
# requirements will be met: http://www.gnu.org/copyleft/gpl.html.
# 
# If you do not wish to use this file under the terms of the GPL version 3.0
# then you may purchase a commercial license.  For more information contact
# info@riverbankcomputing.com.
# 
# This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
# WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


import enum
import typing

import PyQt6.sip

from PyQt6 import QtCore
from PyQt6 import QtGui
from PyQt6 import QtPdf
from PyQt6 import QtWidgets

# Support for QDate, QDateTime and QTime.
import datetime

# Convenient type aliases.
PYQT_SIGNAL = typing.Union[QtCore.pyqtSignal, QtCore.pyqtBoundSignal]
PYQT_SLOT = typing.Union[typing.Callable[..., None], QtCore.pyqtBoundSignal]


class QPdfView(QtWidgets.QAbstractScrollArea):

    class ZoomMode(enum.Enum):
        Custom = ... # type: QPdfView.ZoomMode
        FitToWidth = ... # type: QPdfView.ZoomMode
        FitInView = ... # type: QPdfView.ZoomMode

    class PageMode(enum.Enum):
        SinglePage = ... # type: QPdfView.PageMode
        MultiPage = ... # type: QPdfView.PageMode

    def __init__(self, parent: QtWidgets.QWidget) -> None: ...

    def scrollContentsBy(self, dx: int, dy: int) -> None: ...
    def resizeEvent(self, event: QtGui.QResizeEvent) -> None: ...
    def paintEvent(self, event: QtGui.QPaintEvent) -> None: ...
    documentMarginsChanged: typing.ClassVar[QtCore.pyqtSignal]
    pageSpacingChanged: typing.ClassVar[QtCore.pyqtSignal]
    zoomFactorChanged: typing.ClassVar[QtCore.pyqtSignal]
    zoomModeChanged: typing.ClassVar[QtCore.pyqtSignal]
    pageModeChanged: typing.ClassVar[QtCore.pyqtSignal]
    documentChanged: typing.ClassVar[QtCore.pyqtSignal]
    def setZoomFactor(self, factor: float) -> None: ...
    def setZoomMode(self, mode: 'QPdfView.ZoomMode') -> None: ...
    def setPageMode(self, mode: 'QPdfView.PageMode') -> None: ...
    def setDocumentMargins(self, margins: QtCore.QMargins) -> None: ...
    def documentMargins(self) -> QtCore.QMargins: ...
    def setPageSpacing(self, spacing: int) -> None: ...
    def pageSpacing(self) -> int: ...
    def zoomFactor(self) -> float: ...
    def zoomMode(self) -> 'QPdfView.ZoomMode': ...
    def pageMode(self) -> 'QPdfView.PageMode': ...
    def pageNavigator(self) -> QtPdf.QPdfPageNavigator: ...
    def document(self) -> QtPdf.QPdfDocument: ...
    def setDocument(self, document: QtPdf.QPdfDocument) -> None: ...
